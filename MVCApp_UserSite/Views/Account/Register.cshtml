@model ClassLibrary.Models.KorisnikModel

@{
    ViewBag.Title = "Register";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container register-content">
        <div class="row ">

            <h2 class="text-center" style="margin-top:100px; padding-right:25px;">Registracija</h2>

        </div>
        <hr />


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row ">
            <div class="col-md-6  " style="padding-left:150px;">
                <div class="form-group ">
                    @Html.LabelFor(model => model.Ime, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Ime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ime, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Prezime, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Prezime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Prezime, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DatumRodenja, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.DatumRodenja, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DatumRodenja, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.KorisnickoIme, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.KorisnickoIme, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.KorisnickoIme, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Zaporka, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Zaporka, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Zaporka, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PotvrdiZaporku, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.PotvrdiZaporku, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PotvrdiZaporku, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6 column" style="padding-left:100px;">

                <div class="form-group">
                    @Html.LabelFor(model => model.TipDijabetesa, htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownListFor(model => model.TipDijabetesa, selectList: new List<SelectListItem>()
               { new SelectListItem {Text="Tip 1",Value="Tip1"},
                 new SelectListItem {Text="Tip 2",Value="Tip2"}

               }, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TipDijabetesa, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.FizickaAktivnost, htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownListFor(model => model.FizickaAktivnost, selectList: new List<SelectListItem>()
                { new SelectListItem {Text="Slaba",Value="slaba"},
                  new SelectListItem {Text="Umjerena",Value="umjerena"},
                  new SelectListItem {Text="Intenzivna",Value="intenzivna"},

                }, htmlAttributes: new { @class = "form-control" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Tezina, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Tezina, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tezina, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Visina, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Visina, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Visina, "", new { @class = "text-danger" })

                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Spol, htmlAttributes: new { @class = "control-label " })

                    @Html.DropDownListFor(model => model.Spol, selectList: new List<SelectListItem>()
               { new SelectListItem {Text="M",Value="M"},
                new SelectListItem {Text="Ž",Value="Z"}
               }, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Spol, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    <input type="submit" value="Spremi" class="btn btn-primary  btn-block" />
                </div>
            </div>

        </div>

    </div>














}

